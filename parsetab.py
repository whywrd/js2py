
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN ELSE EQUALTO FALSE GTHAN ID ID IF LBRACE LPAREN MINUS NUMBER OR PLUS RBRACE RPAREN STR SUBSCRIPT TRUEexpression : ID ASSIGN expressionexpression : IF LPAREN expression RPAREN LBRACE expression RBRACEexpression : IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACEexpression : ID SUBSCRIPT ID ASSIGN expressionexpression : ID SUBSCRIPT IDexpression : expression PLUS termexpression : expression MINUS termexpression : expression GTHAN termexpression : expression EQUALTO termexpression : expression AND termexpression : expression OR termexpression : termterm : factorterm : IDfactor : NUMBERfactor : TRUEfactor : FALSEfactor : STRfactor : LBRACE expression RBRACEfactor : LPAREN expression RPAREN'
    
_lr_action_items = {'ID':([0,4,5,12,13,14,15,16,17,18,19,20,35,38,42,],[2,2,2,24,24,24,24,24,24,2,31,2,2,2,2,]),'IF':([0,4,5,18,20,35,38,42,],[3,3,3,3,3,3,3,3,]),'NUMBER':([0,4,5,12,13,14,15,16,17,18,20,35,38,42,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'TRUE':([0,4,5,12,13,14,15,16,17,18,20,35,38,42,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'FALSE':([0,4,5,12,13,14,15,16,17,18,20,35,38,42,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'STR':([0,4,5,12,13,14,15,16,17,18,20,35,38,42,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'LBRACE':([0,4,5,12,13,14,15,16,17,18,20,35,36,38,41,42,],[5,5,5,5,5,5,5,5,5,5,5,5,38,5,42,5,]),'LPAREN':([0,3,4,5,12,13,14,15,16,17,18,20,35,38,42,],[4,20,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'$end':([1,2,6,7,8,9,10,11,23,24,25,26,27,28,29,30,31,33,34,37,40,44,],[0,-14,-12,-13,-15,-16,-17,-18,-6,-14,-7,-8,-9,-10,-11,-1,-5,-20,-19,-4,-2,-3,]),'PLUS':([1,2,6,7,8,9,10,11,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,39,40,43,44,],[12,-14,-12,-13,-15,-16,-17,-18,12,12,-6,-14,-7,-8,-9,-10,-11,12,-5,12,-20,-19,12,12,-2,12,-3,]),'MINUS':([1,2,6,7,8,9,10,11,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,39,40,43,44,],[13,-14,-12,-13,-15,-16,-17,-18,13,13,-6,-14,-7,-8,-9,-10,-11,13,-5,13,-20,-19,13,13,-2,13,-3,]),'GTHAN':([1,2,6,7,8,9,10,11,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,39,40,43,44,],[14,-14,-12,-13,-15,-16,-17,-18,14,14,-6,-14,-7,-8,-9,-10,-11,14,-5,14,-20,-19,14,14,-2,14,-3,]),'EQUALTO':([1,2,6,7,8,9,10,11,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,39,40,43,44,],[15,-14,-12,-13,-15,-16,-17,-18,15,15,-6,-14,-7,-8,-9,-10,-11,15,-5,15,-20,-19,15,15,-2,15,-3,]),'AND':([1,2,6,7,8,9,10,11,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,39,40,43,44,],[16,-14,-12,-13,-15,-16,-17,-18,16,16,-6,-14,-7,-8,-9,-10,-11,16,-5,16,-20,-19,16,16,-2,16,-3,]),'OR':([1,2,6,7,8,9,10,11,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,39,40,43,44,],[17,-14,-12,-13,-15,-16,-17,-18,17,17,-6,-14,-7,-8,-9,-10,-11,17,-5,17,-20,-19,17,17,-2,17,-3,]),'ASSIGN':([2,31,],[18,35,]),'SUBSCRIPT':([2,],[19,]),'RPAREN':([2,6,7,8,9,10,11,21,23,24,25,26,27,28,29,30,31,32,33,34,37,40,44,],[-14,-12,-13,-15,-16,-17,-18,33,-6,-14,-7,-8,-9,-10,-11,-1,-5,36,-20,-19,-4,-2,-3,]),'RBRACE':([2,6,7,8,9,10,11,22,23,24,25,26,27,28,29,30,31,33,34,37,39,40,43,44,],[-14,-12,-13,-15,-16,-17,-18,34,-6,-14,-7,-8,-9,-10,-11,-1,-5,-20,-19,-4,40,-2,44,-3,]),'ELSE':([40,],[41,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,4,5,18,20,35,38,42,],[1,21,22,30,32,37,39,43,]),'term':([0,4,5,12,13,14,15,16,17,18,20,35,38,42,],[6,6,6,23,25,26,27,28,29,6,6,6,6,6,]),'factor':([0,4,5,12,13,14,15,16,17,18,20,35,38,42,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> ID ASSIGN expression','expression',3,'p_expression_assignment','parser.py',93),
  ('expression -> IF LPAREN expression RPAREN LBRACE expression RBRACE','expression',7,'p_expression_if','parser.py',100),
  ('expression -> IF LPAREN expression RPAREN LBRACE expression RBRACE ELSE LBRACE expression RBRACE','expression',11,'p_expression_if_else','parser.py',109),
  ('expression -> ID SUBSCRIPT ID ASSIGN expression','expression',5,'p_store_subscript','parser.py',118),
  ('expression -> ID SUBSCRIPT ID','expression',3,'p_load_subscript','parser.py',130),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','parser.py',138),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','parser.py',146),
  ('expression -> expression GTHAN term','expression',3,'p_expression_gthan','parser.py',154),
  ('expression -> expression EQUALTO term','expression',3,'p_expression_equal_to','parser.py',162),
  ('expression -> expression AND term','expression',3,'p_expression_and','parser.py',170),
  ('expression -> expression OR term','expression',3,'p_expression_or','parser.py',177),
  ('expression -> term','expression',1,'p_expression_term','parser.py',184),
  ('term -> factor','term',1,'p_term_factor','parser.py',189),
  ('term -> ID','term',1,'p_term_id','parser.py',194),
  ('factor -> NUMBER','factor',1,'p_factor_num','parser.py',199),
  ('factor -> TRUE','factor',1,'p_factor_true','parser.py',204),
  ('factor -> FALSE','factor',1,'p_factor_false','parser.py',209),
  ('factor -> STR','factor',1,'p_factor_str','parser.py',214),
  ('factor -> LBRACE expression RBRACE','factor',3,'p_factor_scope','parser.py',219),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','parser.py',224),
]
